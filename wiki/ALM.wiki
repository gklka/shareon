#summary Alkalmazás szintű többesadás.

= Feladat =

-Alkalmazás szintű többesadás (ALM - Applicaton Layer Multicast) megvalósítása.


= Az alkalmazás szintű hálózat (ALN - Application Layer Network) felépítése =

Az általunk készített alkalmazás egy Napster típusú átfedő. A Napster típusú átfedőben nem szerepel ALM, a peer-ek egyenként kapcsolódnak a szerverhez, valamint a letöltések a peer-ek között zajlanak közvetlenül. A Napster-ben hiányzó ezen megoldásokvezettek a rendszer túlterheltségéghez, melyet aztán később a szerverfarmon belüli DNS rotációval igyekeztek megoldani.

Mi a feladatmegvalósítás során lehetőséget biztosítottunk a peer-ek számára, hogy a szerverhez való közvetlen kapcsolódás helyett ALN-t használjanak. Ez csökkenti a terhelést a szerveren. Az ALN-re való áttérés a szerverre való bejelentkezéskor lehetséges, ekkor a szerver a peer rendelezésére bocsájt egy véletlenszerű IP-t az adatbázisból, melyhez a kliens csatlakozhat (lásd 1. ábra). Ettől kezdve a véletlenszerűen kiválasztott peer lesz a csatlakozott új peer ALN kiszolgálója, és viseli a teljes felelősséget a hozzá csatlakozott peer-ek kommunikációjáért. Ezáltal tehát a szerver-kliens kommunikáció majdnem teljes egészében ALN segítségével bonyolítható, ezáltal kivételt képeznek a szerverhez közvetlenül kapcsolódó peer-ek.

http://users.hszk.bme.hu/~hl551/alm_connect.png
<br>
1. ábra: Peer csatlakozása a rednszerhez ALN lehetőséggel

Az adott peer-hez csatlakozó peer-ek ALN csatlakozásaiért és kommunikációjáért a kliens program csomagjában megtalálható ALNListener osztály felelős. Ez az osztály a ShareOnClient indításakor példányosodik, és külön szálon figyel a bejövő ALN csatlakozási kérelmekre. Amennyiben ilyen kérés érkezik be, egy új szálat indít, melynek neve ALNThread, és amely egy ALN segítségével kapcsolódott klienssel történő kommunikációt szimbolizál.

A kommunikációs protokollban is szükség volt néhány változtatás bevezetésére, hogy az így létrehozott ALN helyesen működjön. Az ALN-hez csatlakozó peer kiszolgálója (első ALN peer a szerver felé veető útvonalon) először az általa kiszolgált peer-től érkező üzenetet "betokozza". Ez annyit jelent, hogy elé ír egy "aln" String-et mögé pedig a kiszolgált peer IP címéből képzett String-et. Ez azért szükséges, mivel bizonyos funkciók esetén szükségünk van az eredeti feladó IP címére (megosztás, eltávolítás, kijelentkezés). A keresés üzenetek nem kerülnek "betokozásra", ugyanis lényegtelen ez esetben az eredeti feladó. Az ALN üzeneteket a közbenső peer-ek csupán továbbítják, nem "néznek bele", a "betokozás" a kezdő peer feladata. A válasz a kérés útvonalán visszafelé halad.<br>
A csomagok eredeti címzetthez való visszajutását a terjedési útvonalon alkalmazott szemaforok biztosítják. Amíg egy üzenet terjed tovább az útvonalon más peer nem küldhet üzenetet. A válasz üzenetek pedig visszaérkeznek az eredeti feladóhoz a socket-eket nyomon követve. Amennyiben az ALN valamelyik tagjának megszakad a kapcsolata a szerverrel, az egész általa kiszolgált ALN-fa kapcsolata is megszakad. Ekkor, amennyiben kérés érkezik, egy "@error" üzenettel válaszol, ebből a kérő peer tudja, hog a kapcsolat megszakadt, bontja azt, és újat kezdeményezhet.